{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Resultado.js","componentes/Resumen.js","componentes/App.js","helper.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","cotizarSeguro","e","preventDefault","plan","_this","current","checked","infoAuto","marca","value","year","currentTarget","reset","onSubmit","this","name","ref","type","Component","Resultado","resultado","mensaje","TransitionGroup","component","CSSTransition","classNames","key","timeout","enter","exit","Resumen","mostrarResumen","_this$props$datos","datos","componentes_Resultado","App","state","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","datosAuto","setState","componentes_Header","componentes_Formulario","componentes_Resumen","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f210ac4d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Header = props => {\r\n    return(\r\n        <header className=\"top\">\r\n            <h1>\r\n                {props.titulo}\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass Formulario extends Component {\r\n    \r\n        marcaRef = React.createRef();\r\n        yearRef = React.createRef();\r\n        planBasicoRef = React.createRef();\r\n        planCompletoRef = React.createRef();\r\n\r\n    cotizarSeguro = (e) => {\r\n        e.preventDefault();\r\n\r\n        // leer el plan\r\n        const plan = this.planBasicoRef.current.checked ? 'basico' : 'completo';\r\n\r\n        // Obtener los datos\r\n        //console.log(this.marcaRef.current.value);\r\n        \r\n        // Crear el objeto\r\n        const infoAuto = {\r\n            marca: this.marcaRef.current.value,\r\n            year: this.yearRef.current.value,\r\n            plan: plan\r\n        }\r\n\r\n        //console.log(infoAuto);\r\n        // Enviarlo al componente principal\r\n        this.props.cotizarSeguro(infoAuto);\r\n\r\n        // Resetear el formulario\r\n        e.currentTarget.reset();\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\r\n                <div className=\"campo\">\r\n                    <label>Marca</label>\r\n                    <select name=\"marca\" ref={this.marcaRef} >\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Año</label>\r\n                    <select name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label>Plan:</label>\r\n                    <input type=\"radio\" ref={this.planBasicoRef} name=\"plan\" value=\"basico\"/> Básico\r\n                    <input type=\"radio\" ref={this.planCompletoRef} name=\"plan\" value=\"completo\"/> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Formulario;","import React, {Component} from 'react';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass Resultado extends Component {\r\n    render() {\r\n        const resultado = this.props.resultado;\r\n        const mensaje = (!resultado) ? 'Elije Marca, Año y Tipo de Seguro' : 'El total es: $';\r\n        return(\r\n            <div className=\"gran-total\">\r\n                {mensaje}\r\n                <TransitionGroup component=\"span\" className=\"resultado\">\r\n\r\n                    <CSSTransition \r\n                        classNames=\"resultado\"\r\n                        key={resultado}\r\n                        timeout={{enter: 500, exit: 500}} >\r\n                        <span>{resultado}</span>\r\n\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;","\r\nimport React, {Component} from 'react';\r\nimport Resultado from './Resultado';\r\n\r\nclass Resumen extends Component{\r\n\r\n    mostrarResumen = () => {\r\n        const {marca, year, plan} = this.props.datos;\r\n\r\n        if(!marca || !year || !plan) return null;\r\n\r\n        return (\r\n            <div className=\"resumen\">\r\n                <h2>Resumen de Cotización</h2>\r\n                <li>Marca: {marca}</li>\r\n                <li>Plan: {plan}</li>\r\n                <li>Año del Auto: {year}</li>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                {this.mostrarResumen()}\r\n                <Resultado\r\n                    resultado={this.props.resultado}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resumen;","import React from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport {obtenerDiferenciaAnio, calcularMarca, incrementoPlan, obtenerPlan} from '../helper';\n\n\nclass App extends React.Component {\n\n  state = {\n    resultado : '',\n    datos: {}\n  }\n\n  cotizarSeguro = (datos) => {\n    const {marca, plan, year} = datos;\n\n    // Agregar una base de 2000\n    let resultado = 2000;\n\n    // Obtener la diferencia de años y restar el 3% x cada año\n    const diferencia = obtenerDiferenciaAnio(year);\n    //console.log('La diferencia es' + diferencia);\n    resultado -= ((diferencia * 3) * resultado ) / 100;\n    \n    // Americano 15% Asiatico 5% y europeo 30% de incremento al valor actual\n    resultado = calcularMarca(marca) * resultado;\n    \n\n    // el plan del auto, el basico incrementa el valor 20% y cobertura completa 50%\n    let incrementoPlan = obtenerPlan(plan);\n\n    // dependiendo del plan incrementar\n    resultado = parseFloat( incrementoPlan * resultado).toFixed(2);\n    \n    // crear objeto para el resumen\n    const datosAuto = {\n      marca : marca,\n      plan : plan,\n      year : year\n    }\n\n    //Ya tenemos el resultado\n    this.setState({\n      resultado : resultado,\n      datos : datosAuto\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"contenedor\">\n\n        <Header titulo = 'Cotizador de Seguro de Auto'/>\n\n        <div className=\"contenedor-formulario\">\n          <Formulario \n            cotizarSeguro={this.cotizarSeguro}/>\n          <Resumen \n            datos={this.state.datos}\n            resultado={this.state.resultado}/>\n        </div>\n\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","\r\nexport function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n }\r\n \r\n export function calcularMarca( modelo ) {\r\n     let incremento;\r\n \r\n     switch (modelo) {\r\n         case 'europeo':\r\n             incremento = 1.30;\r\n             break;\r\n         case 'americano':\r\n             incremento = 1.15;\r\n             break;\r\n         case 'asiatico':\r\n             incremento = 1.05;\r\n             break;\r\n         default:\r\n             break;\r\n     }\r\n \r\n     return incremento;\r\n }\r\n export function obtenerPlan( plan ) {\r\n     return (plan === 'basico') ? 1.20 : 1.50;\r\n }\r\n export function primeraMayuscula(texto) {\r\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}